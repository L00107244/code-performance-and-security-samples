package DeadLock;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class ThreadDeadLockTest {

	@Before
	public void setUp() throws Exception {
	}

	@Test
	public void testMain() {
		
			Object obj1 = new Object();
			Object obj2 = new Object();
			Object obj3 = new Object();
			
			Thread t1 = new Thread(new SyncThread(obj1, obj2), "t1");
			Thread t2 = new Thread(new SyncThread(obj2, obj3), "t2");
			Thread t3 = new Thread(new SyncThread(obj3, obj1), "t3");
			
			t1.start();
			//Thread.sleep(5000);
			t2.start();
			//Thread.sleep(5000);
			t3.start();
		
	}

	@Test
	public void testObject() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetClass() {
		fail("Not yet implemented");
	}

	@Test
	public void testEquals() {
		fail("Not yet implemented");
	}

	@Test
	public void testToString() {
		fail("Not yet implemented");
	}

	@Test
	public void testNotify() {
		fail("Not yet implemented");
	}

	@Test
	public void testWait() {
		fail("Not yet implemented");
	}

}
